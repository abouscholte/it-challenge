{"version":3,"sources":["../../lib/atob.js","../../lib/base64_url_decode.js","../../lib/index.js","components/pages/account/loginForm.js","pages/account/login.js"],"names":["InvalidCharacterError","message","this","prototype","Error","name","window","atob","bind","input","str","String","replace","length","bs","buffer","bc","idx","output","charAt","fromCharCode","indexOf","decodeURIComponent","m","p","code","charCodeAt","toString","toUpperCase","err","InvalidTokenError","token","options","pos","header","JSON","parse","base64_url_decode","split","e","LoginForm","alert","onSubmit","handleSubmit","register","errors","title","subtitle","formInfo","visible","text","method","htmlFor","type","id","tabIndex","ref","required","className","useremail","password","value","to","Login","history","useHistory","location","useLocation","useForm","useState","state","setAlert","useEffect","document","data","trackPromise","fetch","process","body","stringify","then","response","a","json","error","success","decoded_token","jwt_decode","localStorage","setItem","push","pathname","catch","console"],"mappings":"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","file":"static/js/25.fa973d65.chunk.js","sourcesContent":["/**\n * The code was extracted from:\n * https://github.com/davidchambers/Base64.js\n */\n\nvar chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\nfunction InvalidCharacterError(message) {\n    this.message = message;\n}\n\nInvalidCharacterError.prototype = new Error();\nInvalidCharacterError.prototype.name = \"InvalidCharacterError\";\n\nfunction polyfill(input) {\n    var str = String(input).replace(/=+$/, \"\");\n    if (str.length % 4 == 1) {\n        throw new InvalidCharacterError(\n            \"'atob' failed: The string to be decoded is not correctly encoded.\"\n        );\n    }\n    for (\n        // initialize result and counters\n        var bc = 0, bs, buffer, idx = 0, output = \"\";\n        // get next character\n        (buffer = str.charAt(idx++));\n        // character found in table? initialize bit storage and add its ascii value;\n        ~buffer &&\n        ((bs = bc % 4 ? bs * 64 + buffer : buffer),\n            // and if not first of each 4 characters,\n            // convert the first 8 bits to one ascii character\n            bc++ % 4) ?\n        (output += String.fromCharCode(255 & (bs >> ((-2 * bc) & 6)))) :\n        0\n    ) {\n        // try to find character in table (0-63, not found => -1)\n        buffer = chars.indexOf(buffer);\n    }\n    return output;\n}\n\nexport default (typeof window !== \"undefined\" &&\n    window.atob &&\n    window.atob.bind(window)) ||\npolyfill;","import atob from \"./atob\";\n\nfunction b64DecodeUnicode(str) {\n    return decodeURIComponent(\n        atob(str).replace(/(.)/g, function(m, p) {\n            var code = p.charCodeAt(0).toString(16).toUpperCase();\n            if (code.length < 2) {\n                code = \"0\" + code;\n            }\n            return \"%\" + code;\n        })\n    );\n}\n\nexport default function(str) {\n    var output = str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    switch (output.length % 4) {\n        case 0:\n            break;\n        case 2:\n            output += \"==\";\n            break;\n        case 3:\n            output += \"=\";\n            break;\n        default:\n            throw \"Illegal base64url string!\";\n    }\n\n    try {\n        return b64DecodeUnicode(output);\n    } catch (err) {\n        return atob(output);\n    }\n}","\"use strict\";\n\nimport base64_url_decode from \"./base64_url_decode\";\n\nexport function InvalidTokenError(message) {\n    this.message = message;\n}\n\nInvalidTokenError.prototype = new Error();\nInvalidTokenError.prototype.name = \"InvalidTokenError\";\n\nexport default function(token, options) {\n    if (typeof token !== \"string\") {\n        throw new InvalidTokenError(\"Invalid token specified\");\n    }\n\n    options = options || {};\n    var pos = options.header === true ? 0 : 1;\n    try {\n        return JSON.parse(base64_url_decode(token.split(\".\")[pos]));\n    } catch (e) {\n        throw new InvalidTokenError(\"Invalid token specified: \" + e.message);\n    }\n}","import React from \"react\"\nimport { Link } from \"react-router-dom\"\nimport AuthPage from \"components/pages/account/authPage\"\nimport {\n  FormPageForm,\n  FormGroup,\n  FormLabel,\n  FormControl,\n  FormControlError,\n  FormLinks,\n  FormSubmit\n} from \"components/elements/forms\"\nimport Alert from \"components/elements/alert\"\n\nconst LoginForm = ({ alert, onSubmit, handleSubmit, register, errors }) => (\n  <AuthPage\n    title=\"Log in bij Notenboom\"\n    subtitle=\"Log in met je account om fouten in lesboeken te kunnen rapporteren binnen het Notenboom systeem.\"\n    formInfo=\"signup\"\n  >\n\n    <Alert visible={alert.visible} text={alert.alert} />\n\n    <FormPageForm onSubmit={handleSubmit(onSubmit)} method=\"POST\">\n      <FormGroup>\n        <FormLabel htmlFor=\"useremail\">Vul uw e-mailadres of gebruikersnaam in</FormLabel>\n        <FormControl type=\"text\" id=\"useremail\" name=\"useremail\" tabIndex=\"1\" ref={register({ required: \"Dit veld is verplicht!\" })} className={errors.useremail && \"error\"} />\n        {errors.useremail && <FormControlError>{errors.useremail.message}</FormControlError>}\n      </FormGroup>\n      <FormGroup>\n        <FormLabel htmlFor=\"password\">Vul uw wachtwoord in</FormLabel>\n        <FormControl type=\"password\" id=\"password\" name=\"password\" tabIndex=\"2\" ref={register({ required: \"Dit veld is verplicht!\" })} className={errors.password && \"error\"} />\n        {errors.password && <FormControlError>{errors.password.message}</FormControlError>}\n      </FormGroup>\n      <FormSubmit type=\"submit\" value=\"Log in\" className=\"button\" tabIndex=\"3\" />\n      <FormLinks>\n        <Link to=\"/account/wachtwoord-vergeten\">Wachtwoord vergeten?</Link>\n      </FormLinks>\n    </FormPageForm>\n  </AuthPage>\n)\n\nexport default LoginForm","import React, { useEffect, useState } from \"react\"\nimport { useHistory, useLocation } from \"react-router-dom\"\nimport { trackPromise } from \"react-promise-tracker\"\nimport { useForm } from \"react-hook-form\"\nimport jwt_decode from \"jwt-decode\"\nimport LoginForm from \"components/pages/account/loginForm\"\n\nfunction Login() {\n\n  // set constants and state\n  const history = useHistory()\n  const location = useLocation()\n  const { register, handleSubmit, errors } = useForm()\n  const [ alert, setAlert ] = useState({ visible: (location.state ? true : false), alert: (location.state ? location.state.alert : null) })\n  \n  // set page title\n  useEffect(() => document.title = 'Inloggen - Notenboom')\n  \n  // login form submit function\n  const onSubmit = data => {\n    trackPromise (\n      fetch(`${process.env.REACT_APP_API_BASEURL}/user/login.php`, {\n        method: 'POST',\n        body: JSON.stringify(data)\n      })\n        .then(async response => {\n          const data = await response.json()\n          if (data.error) {\n            // set error state\n            setAlert({\n              visible: true,\n              alert: data.error\n            })\n          } else if (data.success) {\n            // set local storage with jwt key\n            // then redirect to logged in homepage\n            let token = data.token\n            let decoded_token = jwt_decode(token)\n            localStorage.setItem('currentUser', JSON.stringify(decoded_token))\n            localStorage.setItem('jwt-token', token)\n            \n            // redirect the user\n            history.push({\n              pathname: '/fouten',\n              state: { alert: data.success }\n            })\n          }\n        })\n        .catch((error) => console.error(error))\n    )\n  }\n\n  // return login page (in components folder)\n  return <LoginForm \n    alert={alert}\n    handleSubmit={handleSubmit}\n    onSubmit={onSubmit}\n    register={register}\n    errors={errors}\n  />\n}\n\nexport default Login"],"sourceRoot":""}